{"./":{"url":"./","title":"Introduction","keywords":"","body":"Introduction 这是JavaScript高级程序设计（第3版）的笔记 每日半小时，阅读多少算多少…… "},"A1-序+前言/序.html":{"url":"A1-序+前言/序.html","title":"序","keywords":"","body":"序 大佬雷最初把JavaScript当作是玩具语言，如认为它只能在页面搞点有意思的交互效果作为装饰。可随着Ajax的出现，大佬雷就懵逼了，这TM还是之前所认为的玩具语言吗？ 我实在想不明白为啥Ajax的出现会让JavaScript变得如此有魅力？ 我想JavaScript本来只是跟页面玩的，可是Ajax的出现，让它多了一个小伙伴儿——服务器，这样一来，它能做的事儿也就变得多样了。 JavaScript很强大吗？如果是，那么它提供了哪些「法宝」来证明它的强大呢？ ★关于这本书 即便你认识了JavaScript好几年了，但是你仍然可以从这本书中学到很多新东西 特点：实实在在、深入浅出 风格：贴切自然 总之： 这本书从介绍表达式和变量声明开始，平滑地过渡到了闭包、面向对象开发等高级主题。与那些把 大量篇幅花在讲解背景知识上的书，以及那些让人感觉好像是要使用 JavaScript 开发导弹制导系统的书 相比，这本书让人感觉细致周到、亲切自然。这是一本写给“普通人”的书，它能让你编写出引以为荣 的代码，构建出令人叫绝的网站。 ★Q&A ①什么叫玩具语言？ 只能玩玩的语言，即相较其它语言只能做些简单活儿的语言……我只能这样认为了。 ps：我在搜索答案的过程中，偶遇的传送门：我的第一个玩具语言 JCScheme 问世了 "},"A1-序+前言/前言.html":{"url":"A1-序+前言/前言.html","title":"前言","keywords":"","body":"前言 ★JavaScript 当今世界最流行（(⊙o⊙)…或许吧！） 一种非常松散的面向对象语言，也是 Web 开发中极受欢迎的一门语言 语法和编程风格与 Java 都很相似，但是这跟Java没有半毛钱关系 一种全新的动态语言（运行时才确定变量类型……） 主要活在Web 浏览器之中（浏览器外的 Javascript 运行环境有哪些？） 目标：致力于增强网站和Web 应用程序的交互性。（Web网站和Web应用程序不是一个意思啊！一个以展示为主，一个以功能为主。我第一次理解这个目标就是为啥不是与用户的交互？而是这两个基佬在交互，所以我觉得应该是二者对用户的交互性。我不知道是不是我理解有问题？还是翻译有问题？为此可以有：「致力于增强网站或者Web 应用程序与用户之间的交互性」） ★本书的逻辑 追根溯源→☞DOM、Ajax ★你会学到什么 掌握如何运用和扩展（难道是ES6/7/8/9之意？）JavaScript这门语言，以此来更好地满足自己的需求 掌握如何实现客户端与服务器的无缝通信 反正就是：教会你在面对各种常见的 Web 开发问题时，如何拿出自己的 JavaScript 解决方案。 ★Q&A ①Web网站和Web应用程序的区别？ 传送门：Web应用程序与网站之间的区别 其中一位网友xxx的总结： 一个web应用程序是一个能够让用户完成某些特定任务的网站。而一个普通的网站的主要目标是给用户提供信息(博客，新闻，指导，等)。 对了，xxx网友还有一个关于电灯泡和发电厂的比喻，让我感觉很有味道，如果没有用电的器具，那么发电厂是否有存在的必要呢？可是没有了电，这些需要电的器具也没有存在的必要了。总之，有些时候，你不能忽视这个正在使用的东西的背后做了哪些事儿…… ②ES5是什么鬼？ 规范？标准？（规范或者标准这TM不是一个意思？）反正有总结： 标准、规范、规程都是标准的一种表现形式，习惯上统称为标准 简单地说规范是对行为、条件的要求和规定，规程是对过程的要求和规定，标准是对结果（或产品）的要求和规定。 自打学编程以来，总喜欢抠字眼，总喜欢针对语义有交集、长得很像的词，如这样的：架构、构架、结构、框架之间有什么区别？ 所以把ES称为标准吧！那么ES5，就是标准的第5个版本咯！详情参考：ES5, ES6, ES2016, ES.Next: JavaScript 的版本是怎么回事？ ③交互性？ 传送门：交互性 、交互设计 这个家伙的概念没有定性，在不同的领域里其含义是不同的。当然「交互性主要运用于计算机及多媒体领域 」，所以可有其含义为： 交互性即当你点击一个链接时到达一个新的页面 当我点击上面那两个链接的时候，就跳转到另外一个页面了，就像是人机交互的基础方式： 交互过程是一个输入和输出的过程，人通过人机界面向计算机输入指令，计算机经过处理后把输出结果呈现给用户。人和计算机之间的输入和输出的形式是多种多样的，因此交互的形式也是多样化的。 也就是说我输入了一个「点击」，然后计算机或者具体一点就是浏览器输出的是「新开一个窗口打开一个新页面」。由于输入和输出都是多样的，那么诸如用户「回车」「滚动」「鼠标悬停」等输入指令，为此对应的输出也是各有各的花招了…… ps：交互是互通的、双向的、的，浏览器的输出可以当作是用户的输入，作用对象不同，说法也不同了……同时可以想到请求与响应，响应回来的数据，前端开发者把这些数据作为输入，然后按进行下一步逻辑操作，输出到页面，所以可有这样的有bug的回路：用户→☞前端开发者→☞后端开发者→☞前端开发者→☞用户。这让我想起了计算机的三大原则： 计算机是执行输入、运算、输出的机器 程序是指令和数据的集合 计算机的处理方式有时与人们的思维习惯不同 ——来自「计算机是怎样跑起来的」一书 一个不恰当的比喻，就如小时候玩的扔沙袋游戏，用户是扔沙袋的人，前后端开发者则是在圈圈里如何灵活躲闪飞过来的沙袋的人，这用户看起来就像是老大…… 扩展阅读：JavaScript事件有哪些？、事件 "}}